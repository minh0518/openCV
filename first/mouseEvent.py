import cv2

title = 'mouse event'                   # 창 제목
img = cv2.imread('./insightbook.opencv_project_python-master/img/blank_500.jpg') # 백색 이미지 읽기
cv2.imshow(title, img)                  # 백색 이미지 표시

colors = {'black':(0,0,0),
         'red' : (0,0,255),
         'blue':(255,0,0),
         'green': (0,255,0) } # 색상 미리 정의
#js처럼 키 : 값 형태로 접근하기 위해  { } 를 사용


def onMouse(event, x, y, flags, param): # 마우스 콜백 함수 구현 
    print(event, x, y, flags)                # 파라미터 출력
    color = colors['black']
    if event == cv2.EVENT_LBUTTONDOWN:  # 왼쪽 버튼 누름인 경우 
        # 컨트롤키와 쉬프트 키를 모두 누른 경우
        if flags & cv2.EVENT_FLAG_CTRLKEY and flags & cv2.EVENT_FLAG_SHIFTKEY : 
            color = colors['green'] #js처럼 대괄호 표기법으로 접근
        elif flags & cv2.EVENT_FLAG_SHIFTKEY : # 쉬프트 키를 누른 경우
            color = colors['blue']
        elif flags & cv2.EVENT_FLAG_CTRLKEY : # 컨트롤 키를 누른 경우
            color = colors['red']

        cv2.circle(img, (x,y), 30, color, -1) 
        # 지름 30 크기의 검은색 원을 해당 좌표에 그림
        cv2.imshow(title, img)          
				# 그려진 이미지를 다시 표시 
		#흰색 배경에다가 이 이벤트를 표시해야하기 때문에 반드시
#이미지창의 이름은 같아야 합니다!

cv2.setMouseCallback(title, onMouse)    
# 마우스 콜백 함수를 GUI 윈도우에 등록 

while True:
    if cv2.waitKey(0) & 0xFF == 27:     # esc로 종료
        break
cv2.destroyAllWindows()