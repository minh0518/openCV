import cv2
import numpy as np



w=int(input('가로 길이'))
h=int(input('세로 길이'))


img=np.full((h,w,3),255,dtype=np.uint8) 
#입력 값을 바탕으로 배경이미지를 만듭니다
    
h2=int((h*0.83))
#5:6 비율을 위해 세로에다가 0.83을 곱해줍니다
#이제 h2는 네이비색 배경사진의 높이를 나타냅니다

x=(int((h-h2)/2))
# x는 위 아래 5:6으로 인해 네이비색 배경 위 아래에 있는
#각 흰색부분들의 높이값입니다

for i in range(h2):
    img[int((h-h2)/2):h-int((h-h2)/2),:]=(125,36,0)
#슬라이싱을 통해 네이비색을 입혀줍니다

rows,cols ,_=img.shape #언패킹



# ----- x 자 만들기 ------

for i in range(x,h-x):
		
	#열 부분은 반드시 i부터가 아니라 i-x부터입니다.
 #행 부분은(가로)위 아래 흰색부분이 있어서 거기를 사용하지 않지만
# 열 부분은(세로) 공백없이 바로 0부터 시작이므로 이 for문의range가 
#x부터 시작이므로 x를 빼줘야 0부터(맨 왼쪾부터) 시작이 됩니다. 안그러면 
# 왼쪽 위부터 그리는 게 아니라 한칸 뛰고 그리기 시작합니다.
      img[i,i-x:(i-x+int(h2*0.2))]=(255,255,255)
      img[i,i-x+int((h2*0.2)/4):i-x+int((h2*0.2)/4)+int(h2*0.1)]=(0,0,255)
        #수학적 연산을 통해 가운데에 h2의 20%만큼의 흰색,
			# 흰색의 가운데에 h2의 10%만큼의 빨간색을 그려줍니다.
                     
      img[i,cols-(int(h2*0.2))-(i-x) : cols-(i-x)]=(255,255,255)
      img[i,cols-(int((h2*0.2)/4))-(i-x)-int(h2*0.1) :cols-(int((h2*0.2)/4))-(i-x)]=(0,0,255)
      #빨간색이 다 그려졌을때 흰색 줄의 50%를 차지해야 하므로
      #1/4지점에서 3/4지점까지 끝나야 합니다
      #그럼 양 옆에 1/4지점이 있게 되어서 딱 중앙에 들어오게 됩니다
    


# ===== + 자 만들기 =========

    
    # 길이가 10이면 4를 중앙에 배치 > (10-4)/2 = 3 그러므로 3 4 3 이런 방식으로 십자가의 시작점을 찾는다
    # 그리고 흰+빨 만들고 흰+빨 만들어서 더하면 겹쳐보이기 때문에
   # 나누어서 만들어줍니다.

for i in range(x,h-x):   #그냥 h2넣으면 길이이기 때문에 
                #국기의 위치가 2부터 8까지(크기7)면 그냥 0~6(크기7)이렇게 크기만
                #맞춰서 뜬다. 그래서 정확하게 시작점과 끝점을 표기해서 x,h-x로 한다
      img[i,int((w-int(h2*0.2))/2):int((w-int(h2*0.2))/2)+int(h2*0.2)]=(255,255,255)
#줄의 위치를 정해주기 위해 사용하는 수학공식은 위에 x자를 구할때와 동일합니다.
for i in range(rows):          
      img[int((h-int(h2*0.2))/2):int((h-int(h2*0.2))/2)+int(h2*0.2),i]=(255,255,255)
        #여기선 for문의 인자를 x,h-x로 해버리면 i가 끝까지 가는 것이 아니어서
        #가로줄이 끝까지 채워지 않음
        
for i in range(x,h-x):   
      img[i,int((w-int(h2*0.2))/2)+int((h2*0.2)/4) :int((w-int(h2*0.2))/2)+int((h2*0.2)/4)+int(h2*0.1)]=(0,0,255)
        #세로줄   빨간줄이 시작될 위치를 시작점으로 :  두께를 더해서 거기ㅣ를 끝점으로
for i in range(rows):          
      img[int((h-int(h2*0.2))/2)+int((h2*0.2)/4):int((h-int(h2*0.2))/2)+int((h2*0.2)/4)+int(h2*0.1),i]=(0,0,255)        
        #가로줄  
cv2.imshow('img',img)
cv2.waitKey(0)
cv2.destroyAllWindows()